/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2025-08-22 04:03:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test02_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>이웃집 토토로</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Malgun Gothic', 'Apple Gothic', sans-serif;\r\n");
      out.write("            line-height: 1.6;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            background-color: #f0f8ff; /* 연한 하늘색 배경 */\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 800px;\r\n");
      out.write("            margin: auto;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0 4px 10px rgba(0,0,0,0.1);\r\n");
      out.write("        }\r\n");
      out.write("        h1, h2 {\r\n");
      out.write("            color: #4CAF50; /* 토토로 색상 */\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .main-image {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: auto;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            box-shadow: 0 2px 5px rgba(0,0,0,0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .info-section {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .info-card {\r\n");
      out.write("            background-color: #e8f5e9;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            width: 300px;\r\n");
      out.write("        }\r\n");
      out.write("        .character-image {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin: 10px auto;\r\n");
      out.write("            width: 150px;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            border: 3px solid #66bb6a;\r\n");
      out.write("        }\r\n");
      out.write("        ul {\r\n");
      out.write("            list-style-type: none;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("        }\r\n");
      out.write("        li {\r\n");
      out.write("            padding: 5px 0;\r\n");
      out.write("        }\r\n");
      out.write("        hr{\r\n");
      out.write("        	width: 90%;\r\n");
      out.write("        	border: 0;\r\n");
      out.write("        	border-top:5px dashed #e8f5e9;\r\n");
      out.write("        }\r\n");
      out.write("        #up{\r\n");
      out.write("        	position: absolute;\r\n");
      out.write("      	 	width: 50px;\r\n");
      out.write("        	height: 70px;\r\n");
      out.write("        	right: 20px;\r\n");
      out.write("        	border-radius: 70px;\r\n");
      out.write("        	top: 720px;\r\n");
      out.write("        	border: 1px solid #dddddd;\r\n");
      out.write("        }\r\n");
      out.write("        #down{\r\n");
      out.write("        	position: absolute;\r\n");
      out.write("      	 	width: 50px;\r\n");
      out.write("        	height: 70px;\r\n");
      out.write("        	right: 20px;\r\n");
      out.write("        	border-radius: 70px;\r\n");
      out.write("        	top: 800px;\r\n");
      out.write("        	border: 1px solid #dddddd;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    	$(document).ready(function() {\r\n");
      out.write("    		var tmp1 = parseInt($(\"#up\").css('top'));\r\n");
      out.write("    		var tmp2 = parseInt($(\"#down\").css('top'));\r\n");
      out.write("    		\r\n");
      out.write("    		$(window).scroll(function() {\r\n");
      out.write("				var scrollTop = $(window).scrollTop();\r\n");
      out.write("				var obj_position1 = scrollTop + tmp1 + \"px\";\r\n");
      out.write("				var obj_position2 = scrollTop + tmp2 + \"px\";\r\n");
      out.write("				\r\n");
      out.write("				$(\"#up\").stop().animate({\"top\":obj_position1},200);\r\n");
      out.write("				$(\"#down\").stop().animate({\"top\":obj_position2},200);\r\n");
      out.write("			});\r\n");
      out.write("    		\r\n");
      out.write("    		\r\n");
      out.write("    		$(\"#up,#down\").click(function() {\r\n");
      out.write("    			const offset = $(\"#up,#down\").offset();\r\n");
      out.write("    			$(\"html\").animate({scrollTop: 0}, 500 );\r\n");
      out.write("			});\r\n");
      out.write("    		\r\n");
      out.write("		});\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>이웃집 토토로 (My Neighbor Totoro)</h1>\r\n");
      out.write("        \r\n");
      out.write("        <img src=\"../image/ramjii.jpg\" alt=\"이웃집 토토로 포스터\" class=\"main-image\">\r\n");
      out.write("        <h2>토토로의 신상 GET 방식으로 전송</h2>\r\n");
      out.write("		<form name = \"test\" action=\"test03.jsp\" method=\"post\">\r\n");
      out.write("			<fieldset>\r\n");
      out.write("			<legend>토토로 신상정보 입력</legend>\r\n");
      out.write("			<p>\r\n");
      out.write("				이름 : <input type = \"text\" name=\"name\" placeholder = \"토토로\" size = \"10\" required>\r\n");
      out.write("			</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				나이 : <input type = \"text\" name=\"major\" placeholder = \"1302\" size = \"10\" required>\r\n");
      out.write("			</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				토토로 패스워드 : <input type = \"password\" name=\"password\" placeholder = \"비밀번호\" size = \"10\" required>\r\n");
      out.write("			</p>\r\n");
      out.write("			\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<textarea rows=\"5\" cols=\"50\" name = \"textarea\" placeholder = \"토토로에 대한 의견를 입력하세요.\"></textarea><br>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			<fieldset>\r\n");
      out.write("			<h3>토토로의 성별은 무엇입니까?</h3>\r\n");
      out.write("			<input type = \"radio\" name = \"sex\" value = \"male\" checked>남자\r\n");
      out.write("			<input type = \"radio\" name = \"sex\" value = \"female\">여자\r\n");
      out.write("			<h3>토토로의 학년은 무엇입니까?</h3>\r\n");
      out.write("			<input type = \"radio\" name = \"grade\" value = \"1\" checked>1학년\r\n");
      out.write("			<input type = \"radio\" name = \"grade\" value = \"2\" >2학년\r\n");
      out.write("			<input type = \"radio\" name = \"grade\" value = \"3\" >3학년\r\n");
      out.write("			<input type = \"radio\" name = \"grade\" value = \"4\" >4학년\r\n");
      out.write("			<input type = \"radio\" name = \"grade\" value = \"5\" >5학년\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			<fieldset>\r\n");
      out.write("			<h3>토토로의 최애 간식은?</h3>\r\n");
      out.write("			<input type = \"checkbox\" name=\"subject\" value = \"다람쥐\" checked>다람쥐<br>\r\n");
      out.write("			<input type = \"checkbox\" name=\"subject\" value = \"햄스터\" >햄스터<br>\r\n");
      out.write("			<input type = \"checkbox\" name=\"subject\" value = \"땃쥐\" >땃쥐<br>\r\n");
      out.write("			<input type = \"checkbox\" name=\"subject\" value = \"날다람쥐\" >날다람쥐\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			<fieldset>\r\n");
      out.write("			<h3>관심 있는 주제는?</h3>\r\n");
      out.write("			<select name=\"subjects\">\r\n");
      out.write("				<option value=\"1\" selected>HTML5</option>\r\n");
      out.write("				<option value=\"2\" >CSS3</option>\r\n");
      out.write("				<option value=\"3\" >Java</option>\r\n");
      out.write("				<option value=\"4\" >Jquery</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			<fieldset>\r\n");
      out.write("			<label>전공 분야 입력\r\n");
      out.write("				<input type = \"text\" list = \"majorlist\" name=\"majorlist\">\r\n");
      out.write("				<datalist id=\"majorlist\">\r\n");
      out.write("					<option value = \"software\" size = \"15\">소프트웨어</option>\r\n");
      out.write("					<option value = \"Robot\">로봇</option>\r\n");
      out.write("					<option value = \"System\">시스템</option>\r\n");
      out.write("					<option value = \"Service\">서비스</option>\r\n");
      out.write("				</datalist>\r\n");
      out.write("			</label>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				Today : <input type = \"date\" name=\"today\" min = \"2020-01-01\"><br>\r\n");
      out.write("				나이 : <input type = \"number\" name = \"number\">\r\n");
      out.write("				\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			<fieldset>\r\n");
      out.write("			작업현황 : <progress value = \"5\" max=\"10\" title=\"진행률\">20%</progress>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			<fieldset>\r\n");
      out.write("			<input type = \"submit\" value = \"전송\">\r\n");
      out.write("			<input type = \"reset\" value = \"초기화\">\r\n");
      out.write("			</fieldset>\r\n");
      out.write("		</form>\r\n");
      out.write("		\r\n");
      out.write("		<input type = \"button\" id=\"target1\" value=\"button1\">\r\n");
      out.write("		<input type = \"button\" id=\"target2\" value=\"button2\">\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("			var t1 = document.getElementById('target1');\r\n");
      out.write("			var t2 = document.getElementById('target2');\r\n");
      out.write("			function bt(){\r\n");
      out.write("				switch(event.target.id){\r\n");
      out.write("				case 'target1':\r\n");
      out.write("					alert('button1');\r\n");
      out.write("					break;\r\n");
      out.write("				case 'target2':\r\n");
      out.write("					alert('button2');\r\n");
      out.write("					break;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			t1.addEventListener('click', bt);\r\n");
      out.write("			t2.addEventListener('click', bt);\r\n");
      out.write("		</script>\r\n");
      out.write("		\r\n");
      out.write("        <h2>영화 소개</h2>\r\n");
      out.write("        <p>\r\n");
      out.write("            '이웃집 토토로'는 스튜디오 지브리가 제작하고 미야자키 하야오 감독이 연출한 1988년 일본의 애니메이션 영화입니다. 도시에서 시골로 이사 온 자매 사츠키와 메이가 숲의 수호자 '토토로'를 만나면서 벌어지는 신비롭고 따뜻한 이야기를 담고 있습니다. \r\n");
      out.write("            자연과 교감하고 순수한 동심을 그려내어 전 세계적으로 많은 사랑을 받는 작품입니다.\r\n");
      out.write("        </p>\r\n");
      out.write("		\r\n");
      out.write("        <hr>\r\n");
      out.write("\r\n");
      out.write("        <h2>등장인물</h2>\r\n");
      out.write("        <div class=\"info-section\">\r\n");
      out.write("            <div class=\"info-card\">\r\n");
      out.write("                <h3>토토로 (Totoro)</h3>\r\n");
      out.write("                <img src=\"../image/totoro.jpg\" alt=\"토토로 이미지\" class=\"character-image\">\r\n");
      out.write("                <p>\r\n");
      out.write("                    숲에 사는 거대한 생물로, 몸이 크고 푹신푹신한 회색 털을 가졌습니다. 아이들에게만 보이는 신비로운 존재로, 소리를 내어 울거나 회오리 바람을 일으키는 등 여러 능력을 보여줍니다.\r\n");
      out.write("                </p>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"info-card\">\r\n");
      out.write("                <h3>사츠키와 메이</h3>\r\n");
      out.write("                <img src=\"../image/saki.jpg\" alt=\"사츠키와 메이 이미지\" class=\"character-image\">\r\n");
      out.write("                <p>\r\n");
      out.write("                    <strong>사츠키:</strong> 11세 소녀로, 동생 메이를 잘 챙기는 의젓한 언니입니다.<br>\r\n");
      out.write("                    <strong>메이:</strong> 4세의 어린 동생으로, 호기심이 많고 순수한 아이입니다. 토토로를 가장 먼저 만납니다.\r\n");
      out.write("                </p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"info-card\">\r\n");
      out.write("                <h3>고양이 버스 (Catbus)</h3>\r\n");
      out.write("                <img src=\"../image/bus.jpg\" alt=\"고양이 버스 이미지\" class=\"character-image\">\r\n");
      out.write("                <p>\r\n");
      out.write("                    토토로의 친구이자 신비로운 이동수단입니다. 커다란 고양이 몸에 12개의 다리와 버스 형태의 속이 비어있는 독특한 외형을 가졌습니다.\r\n");
      out.write("                </p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <hr>\r\n");
      out.write("        \r\n");
      out.write("        <h2>명대사</h2>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>\"도토리... 도토리다!\" - 메이</li>\r\n");
      out.write("            <li>\"토토로! 토토로!\" - 메이</li>\r\n");
      out.write("            <li>\"울지마, 메이. 길은 반드시 열려있어.\" - 사츠키</li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        \r\n");
      out.write("        <p style=\"text-align: center; margin-top: 30px; color: #888;\">&copy; 스튜디오 지브리. 모든 권리 보유.</p>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <button id = \"up\">UP</button>\r\n");
      out.write("    <button id = \"down\">DOWN</button>    \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
