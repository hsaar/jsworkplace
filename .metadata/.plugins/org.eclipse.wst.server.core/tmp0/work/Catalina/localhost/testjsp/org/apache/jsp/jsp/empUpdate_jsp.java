/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2025-08-26 03:08:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.sql.DriverManager;
import java.sql.Connection;

public final class empUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/jsp/../html/header.jsp", Long.valueOf(1756176903755L));
    _jspx_dependants.put("/jsp/connetion.jsp", Long.valueOf(1756098895456L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	body{\r\n");
      out.write("		font:14px/1.8 Arial, Helvetica, sans-serif;\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	.header {\r\n");
      out.write("    position: relative;   /* 내부 요소 절대 위치 기준 */\r\n");
      out.write("    height: 100px;        /* 예시: header 높이 */\r\n");
      out.write("    background: #f1f1f1;  /* 배경색 예시 */\r\n");
      out.write("	}\r\n");
      out.write("	.header .logout {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    bottom: 10px;     /* 아래쪽 여백 */\r\n");
      out.write("    right: 10px;      /* 오른쪽 여백 */\r\n");
      out.write("\r\n");
      out.write("    background-color: #f44336;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    padding: 6px 12px;  /* 버튼 크기 축소 */\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    border-radius: 6px;\r\n");
      out.write("    font-size: 14px;    /* 글씨 크기 작게 */\r\n");
      out.write("    transition: 0.2s;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.header .logout:hover {\r\n");
      out.write("   	background-color: #d32f2f;\r\n");
      out.write("	}\r\n");
      out.write("	.frame{\r\n");
      out.write("		width:800px;\r\n");
      out.write("		margin : 0 auto;\r\n");
      out.write("		border: 1px solid #aaaaaa;\r\n");
      out.write("	}\r\n");
      out.write("	.header{\r\n");
      out.write("		padding : 40px 10px;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		background: #e8f5e9;\r\n");
      out.write("		margin-bottom: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	.logo{\r\n");
      out.write("		font-size: 2em;\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("		background: #f0f8ff;\r\n");
      out.write("		color:#000000;\r\n");
      out.write("		display: inline-block;\r\n");
      out.write("		padding : 0 8px;\r\n");
      out.write("	}\r\n");
      out.write("	.container{\r\n");
      out.write("		overflow: hidden;\r\n");
      out.write("	}\r\n");
      out.write("	.nav{\r\n");
      out.write("		float: left;\r\n");
      out.write("		margin-right:0px;\r\n");
      out.write("		gap:100px;\r\n");
      out.write("		width: 150px;\r\n");
      out.write("		background: #333;\r\n");
      out.write("		color: #fff;\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	.nav-list{\r\n");
      out.write("		list-style: none;\r\n");
      out.write("		margin: 0;\r\n");
      out.write("		padding: 10px 0;\r\n");
      out.write("	}\r\n");
      out.write("	.nav-item{\r\n");
      out.write("		margin: 4px;	\r\n");
      out.write("	}\r\n");
      out.write("	.nav-link{\r\n");
      out.write("		display: block;\r\n");
      out.write("		text-decoration: none;\r\n");
      out.write("		color: #fff;\r\n");
      out.write("		padding: 4px 10px;\r\n");
      out.write("	}\r\n");
      out.write("	.nav-link:hover{\r\n");
      out.write("		background: #5457de;\r\n");
      out.write("	}\r\n");
      out.write("	.content{\r\n");
      out.write("		float:left;\r\n");
      out.write("		margin-left:20px;\r\n");
      out.write("		width: 600px;\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	.foot{\r\n");
      out.write("		margin-top : 30px;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		font-size: 10px;\r\n");
      out.write("	}\r\n");
      out.write("	.foot-list{\r\n");
      out.write("		list-style: none;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.foot-item{\r\n");
      out.write("		display: inline-block;\r\n");
      out.write("		margin: 0;\r\n");
      out.write("		padding : 0 15px;\r\n");
      out.write("		border-right: 1px solid #aaa; \r\n");
      out.write("	}\r\n");
      out.write("	.foot-itemend{\r\n");
      out.write("		display: inline-block;\r\n");
      out.write("		margin: 0;\r\n");
      out.write("		padding : 0 10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css\" integrity=\"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\" crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<!-- Optional theme -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap-theme.min.css\" integrity=\"sha384-6pzBo3FDv/PJ8r2KRkGHifhEocL+1X2rVCTTkUfGk7/0pbek5mMa1upzvWbrUbOZ\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<!-- Latest compiled and minified JavaScript -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js\" integrity=\"sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Inter:400,500,600,700&amp;display=swap\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	//var em = test01();\r\n");
      out.write("	\r\n");
      out.write("	//function test01() {\r\n");
      out.write("	//	alert(\"문서 로딩시 바로 실행!\");\r\n");
      out.write("	//}\r\n");
      out.write("	\r\n");
      out.write("	//document.write(\"<h1>스크립트에서 문서 출력</h1>\");\r\n");
      out.write("	//console.log(\"브라우저 콘솔에 출력됨\");\r\n");
      out.write("	\r\n");
      out.write("	//function test02(){\r\n");
      out.write("	//	alert(\"눌러짐!\");\r\n");
      out.write("	//}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</script>");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Connection conn = null;
	String url = "jdbc:mysql://localhost/scott";
	String user = "root";
	String password = "12345";
	
	Class.forName("com.mysql.cj.jdbc.Driver");
	conn = DriverManager.getConnection(url, user, password);

      out.write('\r');
      out.write('\n');

	String empno = request.getParameter("empno"); 
	String ename = request.getParameter("ename"); 
	String sal = request.getParameter("sal"); 


      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- 주석 : frame start -->\r\n");
      out.write("<div class=\"frame\">\r\n");
      out.write("	<div class=\"header\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../html/top.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"nav\">\r\n");
      out.write("			");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../html/nav.jsp", out, false);
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"content\">\r\n");
      out.write("			<h2>사원 정보 수정</h2>\r\n");
      out.write("			<form action=\"empUpdate_ok.jsp\" method=\"post\">\r\n");
      out.write("				<p>사원 번호 : ");
out.print(empno); 
      out.write("</p>\r\n");
      out.write("				<p>수정전 사원명 : ");
out.print(ename); 
      out.write("</p>\r\n");
      out.write("				<p>수정전 쌀 : ");
out.print(sal); 
      out.write("</p>\r\n");
      out.write("				<input type=\"hidden\" name = \"empno\" value = ");
      out.print(empno);
      out.write(">\r\n");
      out.write("				수정할 사원명 : <input type=\"text\" name=\"ename\" placeholder = ");
      out.print(ename);
      out.write(" required><br>\r\n");
      out.write("				수정할 직함 : <input type=\"text\" name=\"job\" required><br>\r\n");
      out.write("				수정할 MGR : <input type=\"text\" name=\"mgr\" required><br>\r\n");
      out.write("				수정할 입사일 : <input type=\"date\" name=\"hiredate\" required><br>\r\n");
      out.write("				수정할 쌀 : <input type=\"text\" name=\"sal\" placeholder = ");
      out.print(sal);
      out.write(" required><br>\r\n");
      out.write("				수정할 커미션 : <input type=\"text\" name=\"comm\" required><br>\r\n");
      out.write("				수정할 부서번호 : <input type=\"text\" name=\"deptno\" required><br>\r\n");
      out.write("				<input type=\"submit\" value=\"전송\">\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>	\r\n");
      out.write("	<div class=\"foot\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../html/foot.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</div>	\r\n");
      out.write("<!-- frmae end -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
