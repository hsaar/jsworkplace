/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2025-08-20 02:37:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test01_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>NAVAR</title>\r\n");
      out.write("<link rel = \"stylesheet\" href = \"style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<p style=\"background:yellow\">문단 단락 태그</p>\r\n");
      out.write("	<p style=\"background:green\">문단 단락 태그</p>\r\n");
      out.write("	<div style=\"background:red\">문단 단락2 - 주로 사용함</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<h1>&lt;제목 표시하기&gt; - &nbsp;&nbsp;&nbsp;&nbsp;h6까지 사용함</h1>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<h1>점점 <i>작아진다</i></h1>\r\n");
      out.write("		<h2>점점 <em>작아진다</em></h2>\r\n");
      out.write("		<h3>점점 <ins>작아진다</ins></h3>\r\n");
      out.write("		<h4>점점 작아진다</h4>\r\n");
      out.write("		<h5>점점 작아진다</h5>\r\n");
      out.write("		<h6>점점 작아진다</h6>\r\n");
      out.write("	</div><hr>\r\n");
      out.write("	<div>\r\n");
      out.write("		<h2>순서 없는 목록</h2>\r\n");
      out.write("		<h3>점심 메뉴</h3>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li>비빔밥</li>\r\n");
      out.write("			<li>볶음밥</li>\r\n");
      out.write("			<li>쌀국수</li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		<hr>\r\n");
      out.write("		<h2>순서 있는 목록</h2>\r\n");
      out.write("		<h3>군것질거리</h3>\r\n");
      out.write("		<ol>\r\n");
      out.write("			<li>과자</li>\r\n");
      out.write("			<li>콜라</li>\r\n");
      out.write("			<li>사탕</li>	\r\n");
      out.write("			<li><a href=\"http://naver.com\" target=\"_blank\">네이버로 가기</a></li>	\r\n");
      out.write("			<li><a href=\"http://youtube.com\" target=\"_blank\">유튜브로 가기</a></li>	\r\n");
      out.write("		</ol>\r\n");
      out.write("	</div><hr>\r\n");
      out.write("	<!--  1) ./images/ - 현재폴더에서 image폴더로 이동 \r\n");
      out.write("		  2) ../images/ - 상위폴더에서 image폴더로 이동\r\n");
      out.write("		  3) /images/ - 절대경로 root(http://localhost:8080/)에서 image폴더로 이동\r\n");
      out.write("	-->\r\n");
      out.write("	<div>\r\n");
      out.write("		<h2>이미지 불러오기</h2>\r\n");
      out.write("		<img src = \"../image/green2.jpg\">\r\n");
      out.write("		<img src = \"../image/ramjii.jpg\">\r\n");
      out.write("		<img src = \"../image/ramjiii.jpg\">\r\n");
      out.write("		<img src = \"../image/ramjiiii.jpg\">\r\n");
      out.write("		<img src = \"/testjsp/image/ramjii.jpg\">\r\n");
      out.write("		<img src = \"./html/ramjii.jpg\"> <!-- 실행 X -->\r\n");
      out.write("		\r\n");
      out.write("	</div><hr>\r\n");
      out.write("	<table align=\"center\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align = \"center\">\r\n");
      out.write("				<a href = \"http://naver.com\" target = \"_blank\">\r\n");
      out.write("				<img src = \"../image/ramjii.jpg\" alt=\"람쥐썬더\">\r\n");
      out.write("				</a>\r\n");
      out.write("				<div>· 람쥐썬더</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td align = \"center\">\r\n");
      out.write("				<img src = \"../image/ramjiii.jpg\" alt=\"람쥐썬더\">\r\n");
      out.write("				<div>· 람쥐썬더</div>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
